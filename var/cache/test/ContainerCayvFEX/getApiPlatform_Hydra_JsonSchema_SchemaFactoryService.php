<?php

namespace ContainerCayvFEX;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiPlatform_Hydra_JsonSchema_SchemaFactoryService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'api_platform.hydra.json_schema.schema_factory' shared service.
     *
     * @return \ApiPlatform\Hydra\JsonSchema\SchemaFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'api-platform'.\DIRECTORY_SEPARATOR.'json-schema'.\DIRECTORY_SEPARATOR.'SchemaFactoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'api-platform'.\DIRECTORY_SEPARATOR.'json-schema'.\DIRECTORY_SEPARATOR.'SchemaFactoryAwareInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'api-platform'.\DIRECTORY_SEPARATOR.'hydra'.\DIRECTORY_SEPARATOR.'JsonSchema'.\DIRECTORY_SEPARATOR.'SchemaFactory.php';

        $a = ($container->privates['api_platform.hydra.json_schema.schema_factory.inner'] ?? $container->load('getApiPlatform_Hydra_JsonSchema_SchemaFactory_InnerService'));

        if (isset($container->privates['api_platform.hydra.json_schema.schema_factory'])) {
            return $container->privates['api_platform.hydra.json_schema.schema_factory'];
        }

        return $container->privates['api_platform.hydra.json_schema.schema_factory'] = new \ApiPlatform\Hydra\JsonSchema\SchemaFactory($a, $container->parameters['api_platform.serializer.default_context']);
    }
}
